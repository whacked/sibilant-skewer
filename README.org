* sibilant skewer

  for emacs-browser interaction for [[https://github.com/jbr/sibilant][sibilant]] files via [[https://github.com/skeeto/skewer-mode][skewer]]

  stub code copy pasted from [[https://github.com/whacked/wispjs-mode/blob/master/wispjs-skewer.el][wispjs-skewer]]

* usage

  1. set =httpd-root= for emacs
  2. =M-x httpd-start=
  3. open your sibilant file and =M-x skewer-mode=
  4. open browser to =http://localhost:8080/example.html=

* jbr indentation override

  by default, jbr's =sibilant-mode= uses a leading space in {} and [],
  which differs from clojure (no leading space).

  this just changes =(+ 2 ...= to =(+ 1 ...=; an easy way to diff:

  =M-x ediff-regions-linewise=

  choose this function, then choose the same function in =sibilant-mode.el=

#+BEGIN_SRC emacs-lisp :eval confirm
(defun sibilant-indent-function (indent-point state)
  (let ((normal-indent (current-column)))
    (goto-char (1+ (elt state 1)))
    (parse-partial-sexp (point) calculate-lisp-indent-last-sexp 0 t)
    (let ((function (buffer-substring (point)
                                      (progn (forward-sexp 1) (point))))
          (open-paren (elt state 1))
          method)

      (when (eq "#" function) (setq function 'lambda))
      (when (eq "#>" function) (setq function 'thunk))

      (cond
       ((member (char-after open-paren) '(?\[ ?\{))
        (goto-char open-paren)
        (+ 1 (current-column)))

       ((eq method 'def)
        (lisp-indent-defform state indent-point))

       ((integerp method)
        (lisp-indent-specform method state indent-point normal-indent))

       (method
        (funcall method indent-point state))))))
#+END_SRC
